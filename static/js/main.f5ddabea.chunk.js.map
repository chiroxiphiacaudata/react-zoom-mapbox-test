{"version":3,"sources":["Map.js","App.js","reportWebVitals.js","index.js"],"names":["mapboxgl","accessToken","Map","mapContainerRef","useRef","useState","lng","setLng","lat","setLat","zoom","setZoom","useEffect","map","container","current","style","center","addControl","NavigationControl","on","getCenter","toFixed","getZoom","remove","className","ref","App","initialScale","initialPositionX","initialPositionY","zoomIn","zoomOut","resetTransform","zoomToElement","Fragment","onClick","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SAIAA,IAASC,YACP,mGAEF,IAyCeC,EAzCH,WACV,IAAMC,EAAkBC,iBAAO,MAE/B,EAAsBC,mBAAS,oBAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAsBF,mBAAS,mBAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAAwBJ,mBAAS,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAwBA,OArBAC,qBAAU,WACR,IAAMC,EAAM,IAAIb,IAASE,IAAI,CAC3BY,UAAWX,EAAgBY,QAC3BC,MAAO,yDACPC,OAAQ,CAACX,EAAKE,GACdE,KAAMA,IAaR,OATAG,EAAIK,WAAW,IAAIlB,IAASmB,kBAAqB,aAEjDN,EAAIO,GAAG,QAAQ,WACbb,EAAOM,EAAIQ,YAAYf,IAAIgB,QAAQ,IACnCb,EAAOI,EAAIQ,YAAYb,IAAIc,QAAQ,IACnCX,EAAQE,EAAIU,UAAUD,QAAQ,OAIzB,kBAAMT,EAAIW,YAChB,IAGD,gCACE,qBAAKC,UAAU,eAAf,SACE,8CACcnB,EADd,gBACgCE,EADhC,YAC8CE,OAGhD,qBAAKe,UAAU,gBAAgBC,IAAKvB,Q,uECI3BwB,MAxCf,WACE,OACE,8BAEE,cAAC,IAAD,CACAC,aAAc,EACdC,iBAAkB,IAClBC,iBAAkB,IAHlB,SAKC,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,eAAgBC,EAApC,EAAoCA,cAApC,wBACG,eAAC,IAAMC,SAAP,WACE,sBAAKV,UAAU,QAAf,UACE,wBAAQW,QAAS,kBAAML,KAAvB,eACA,wBAAQK,QAAS,kBAAMJ,KAAvB,eACA,wBAAQI,QAAS,kBAAMH,KAAvB,kBAEF,eAAC,IAAD,WACA,qBAAKI,GAAG,QACR,sBAAKA,GAAG,QAAR,UACE,4CACA,wBAAQD,QAAS,kBAAMF,EAAc,WAArC,wCAEF,sBAAKG,GAAG,SAAR,UACE,4CACA,wBAAQD,QAAS,kBAAMF,EAAc,UAArC,qCACA,cAAC,EAAD,OAEF,sBAAKG,GAAG,QAAR,UACE,4CACA,wBAAQD,QAAS,kBAAMF,EAAc,UAArC,oDCxBCI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAO1Bb,M","file":"static/js/main.f5ddabea.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\nimport './Map.css';\n\nmapboxgl.accessToken =\n  'pk.eyJ1IjoiY29tdW5pLWRhZG9zIiwiYSI6ImNqdWxlaHRqbjIycjE0M3BpamY3a3c4aWUifQ.HGizp_QckKQVjAZnnw8qAg';\n\nconst Map = () => {\n  const mapContainerRef = useRef(null);\n\n  const [lng, setLng] = useState(16.585021731986483);\n  const [lat, setLat] = useState(40.66277652934977);\n  const [zoom, setZoom] = useState(7);\n\n  // Initialize map when component mounts\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: 'mapbox://styles/comuni-dados/ck87kqz1v0hlt1iptdomrfl1y',\n      center: [lng, lat],\n      zoom: zoom\n    });\n\n    // Add navigation control (the +/- zoom buttons)\n    map.addControl(new mapboxgl.NavigationControl(), 'top-right'); \n\n    map.on('move', () => {\n      setLng(map.getCenter().lng.toFixed(4));\n      setLat(map.getCenter().lat.toFixed(4));\n      setZoom(map.getZoom().toFixed(2));\n    });\n\n    // Clean up on unmount\n    return () => map.remove();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <div className='sidebarStyle'>\n        <div>\n          Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\n        </div>\n      </div>\n      <div className='map-container' ref={mapContainerRef} />\n    </div>\n  );\n};\n\nexport default Map;","import React, { Component } from 'react';\nimport Map from './Map';\nimport './App.css';\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\n\n\n\nfunction App() {\n  return (\n    <div>\n    \n      <TransformWrapper\n      initialScale={1}\n      initialPositionX={200}\n      initialPositionY={100}\n    >\n      {({ zoomIn, zoomOut, resetTransform, zoomToElement,...rest }) => (\n          <React.Fragment>\n            <div className=\"tools\">\n              <button onClick={() => zoomIn()}>+</button>\n              <button onClick={() => zoomOut()}>-</button>\n              <button onClick={() => resetTransform()}>x</button>\n            </div>\n            <TransformComponent>\n            <div id=\"img\"></div>\n            <div id=\"first\">\n              <div>section 1</div>\n              <button onClick={() => zoomToElement(\"second\")}>FLY to SECTION 2 button</button>\n            </div>\n            <div id=\"second\">\n              <div>section 2</div>\n              <button onClick={() => zoomToElement(\"third\")}>FLY to SECTION 3 button</button>\n              <Map />\n            </div>\n            <div id=\"third\">\n              <div>section 3</div>\n              <button onClick={() => zoomToElement(\"first\")}>FLY to SECTION 1 button</button>\n            </div>\n            </TransformComponent>\n          </React.Fragment>\n        )}\n    </TransformWrapper>\n    </div>\n  );\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();"],"sourceRoot":""}